version: '3'

services:
  backend-tomcat:
    build:
      context: ./backend
      dockerfile: ./docker/dev/tomcat/Dockerfile
    container_name: backend-tomcat
    environment:
      SPRING_PROFILES_ACTIVE: dev
      JAVA_OPTS: -Dspring.profiles.active=dev
      JPDA_ADDRESS: "*:8000"
      JPDA_TRANSPORT: dt_socket
    links:
      - postgres-dev:postgres-dev
    depends_on:
      - postgres-dev
    volumes:
      - ./backend/docker/dev/tomcat/conf/tomcat-users.xml:/usr/local/tomcat/conf/tomcat-users.xml
      - ./backend/docker/dev/tomcat/conf/server.xml:/usr/local/tomcat/conf/server.xml
      - ./backend/docker/dev/tomcat/conf/context.xml:/usr/local/tomcat/conf/context.xml
      - ./backend/build/libs/backend-tomcat.war:/usr/local/tomcat/webapps/backend-tomcat.war
    ports:
      - "8080:8080"
      - "9000:8000"

#  frontend-nginx:
#    build:
#      context: ./frontend
#      dockerfile: ./docker/dev/nginx/Dockerfile
#    volumes:
#      - ./frontend:/frontend
#      - ./frontend/docker/dev/nginx/default.conf:/etc/nginx/conf.d/default.conf
#    depends_on:
#      - backend-tomcat
#    ports:
#      - "8081:80"
#
#  frontend-nodejs:
#    image: node:17-alpine3.14
#    volumes:
#      - ./frontend:/frontend
#    working_dir: /frontend
#    tty: true

  postgres-dev:
    container_name: postgres-dev
    image: postgres:13.1-alpine
    environment:
      - POSTGRES_PASSWORD=postgres-dev
      - POSTGRES_USER=postgres-dev
      - POSTGRES_DB=postgres-dev
      - PGDATA=/pg-data-dev
    ports:
      - 54321:5432
    volumes:
      - pg-data-dev:/pg-data-dev

  postgres-test:
    container_name: postgres-test
    image: postgres:13.1-alpine
    environment:
      - POSTGRES_PASSWORD=postgres-test
      - POSTGRES_USER=postgres-test
      - POSTGRES_DB=postgres-test
      - PGDATA=/pg-data-test
    ports:
      - 54322:5432
    volumes:
      - pg-data-test:/pg-data-test

volumes:
  pg-data-dev:
  pg-data-test: